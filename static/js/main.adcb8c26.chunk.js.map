{"version":3,"sources":["components/Button/Button.module.css","components/ImageItem/ImageItem.module.css","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGallery.module.css","components/Searchbar/Searchbar.js","components/Loader/Loader.js","components/Button/Button.js","components/ImageItem/ImageItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/ImageModal/ImageModal.js","services/api.js","App.js","index.js","components/Modal/Modal.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","query","setQuery","className","styles","SearchForm","e","preventDefault","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","target","Loader","Button","fetchImages","onClick","ImageItem","webformatURL","onSetImageLarge","largeImageURL","src","alt","ImageGalleryItemImage","ImageGallery","images","map","ImageGalleryItem","key","Modal","onClose","children","useEffect","window","addEventListener","code","Overlay","ImageModal","largeImage","defaultProps","searchQuery","page","apiKey","axios","get","then","response","data","hits","App","setImages","isLoading","setIsLoading","setError","setSearchQuery","setPage","setLargeImage","scroll","imagesApi","console","log","prevImages","catch","error","finally","scrollTo","top","document","documentElement","scrollHeight","behavior","length","url","color","height","width","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.adcb8c26.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1hT14\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItemImage\":\"ImageItem_ImageGalleryItemImage__2R_gr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1BfFS\",\"SearchForm\":\"Searchbar_SearchForm__36X43\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3U1vn\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2Aj3j\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1Xa7d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1xbOt\",\"ImageGalleryItem\":\"ImageGallery_ImageGalleryItem__13_8J\"};","import React, { useState } from 'react';\r\nimport styles from './Searchbar.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n  const handleChange = e => {\r\n    setQuery(e.target.value);\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(query);\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className={styles.Searchbar}>\r\n        <form className={styles.SearchForm} onSubmit={handleSubmit}>\r\n          <button type=\"submit\" className={styles.SearchFormButton}>\r\n            <span className={styles.SearchFormButtonLabel}>Search </span>\r\n          </button>\r\n\r\n          <input\r\n            className={styles.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={query}\r\n            onChange={handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from 'react-loader-spinner';\r\n\r\n\r\nexport default Loader;","import React from 'react';\r\nimport styles from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Button({ fetchImages }) {\r\n  return (\r\n    <button type=\"articles\" className={styles.Button} onClick={fetchImages}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\nButton.propTypes = {\r\n  fetchImages: PropTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","import React from 'react';\r\nimport styles from \"./ImageItem.module.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ImageItem({ webformatURL, onSetImageLarge, largeImageURL}) {\r\n  return <img src={webformatURL} alt=\"\" className={styles.ImageGalleryItemImage} onClick={() => onSetImageLarge(largeImageURL)}/>;\r\n}\r\n\r\nImageItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  onSetImageLarge: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport ImageItem from '../ImageItem/ImageItem';\r\nimport styles from './ImageGallery.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ImageGallery({ images, onSetImageLarge }) {\r\n  return (\r\n    <ul className={styles.ImageGallery}>\r\n      {images.map(({ largeImageURL, webformatURL }) => (\r\n        <li className={styles.ImageGalleryItem} key={largeImageURL}>\r\n          <ImageItem\r\n            webformatURL={webformatURL}\r\n            largeImageURL={largeImageURL}\r\n            onSetImageLarge={onSetImageLarge}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({ largeImageURL: PropTypes.string.isRequired }),\r\n  ).isRequired,\r\n  onSetImageLarge: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGallery;\r\n","import React, { useEffect } from 'react';\r\nimport styles from './Modal.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Modal({ onClose, children } ) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', e => {\r\n      if (e.code === 'Escape') {\r\n        onClose();\r\n      }\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className={styles.Overlay}>\r\n      <div className={styles.Modal}>{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\nexport default Modal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageModal = ({largeImage}) => (\r\n    <img src={largeImage} alt=\"\" />\r\n)\r\nImageModal.defaultProps = {\r\n    largeImage:\r\n      'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder',\r\n  };\r\n  \r\nImageModal.propTypes = {\r\n    largeImage: PropTypes.string.isRequired,\r\n  };\r\nexport default ImageModal;\r\n\r\n","import axios from 'axios';\r\n\r\nconst FetchImagesWithQuery = (searchQuery, page = 0, apiKey = '17718415-abf6596e447b0ee9bedcd0b67') =>{\r\n    return axios\r\n     .get(`https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`)\r\n    .then(response => response.data.hits);\r\n}\r\n\r\n\r\nexport default {\r\n    FetchImagesWithQuery,\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport Searchbar from './components/Searchbar/Searchbar';\nimport Loader from './components/Loader/Loader';\nimport Button from './components/Button/Button';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Modal from './components/Modal/Modal';\nimport ImageModal from './components/ImageModal/ImageModal';\n\nimport imagesApi from './services/api';\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [page, setPage] = useState(0);\n  const [largeImage, setLargeImage] = useState(null);\n\n  useEffect(() => {\n    fetchImages();\n  }, [searchQuery]);\n\n  useEffect(() => {\n    scroll();\n  }, [images]);\n\n  const fetchImages = () => {\n    if (searchQuery !== '') setIsLoading(true);\n    imagesApi\n      .FetchImagesWithQuery(searchQuery, page)\n      .then(images => {\n        console.log(images);\n        setImages(prevImages => [...prevImages, ...images]);\n        setPage(page + 1);\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(() => setIsLoading(false));\n  };\n  const handlerSearchFormSubmit = query => {\n    setSearchQuery(query);\n    setPage(1);\n    setImages([]);\n  };\n\n  const toggleModal = () => {\n    setLargeImage(null);\n  };\n\n  const setlargeImage = url => {\n    setLargeImage(url);\n  };\n  \n  const scroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n  return (\n    <>\n      <Searchbar onSubmit={handlerSearchFormSubmit} />\n\n      {images.length > 0 && (\n        <ImageGallery images={images} onSetImageLarge={setlargeImage} />\n      )}\n      {isLoading && (\n        <Loader\n          type=\"Circles\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000}\n        />\n      )}\n      {images.length > 0 && <Button fetchImages={fetchImages} />}\n      {largeImage && (\n        <Modal onClose={toggleModal}>\n          <ImageModal largeImage={largeImage} />\n        </Modal>\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3RWbo\",\"Modal\":\"Modal_Modal__3p24P\"};"],"sourceRoot":""}